/*
https://programmers.co.kr/learn/courses/30/lessons/12907

거스름돈
문제 설명

Finn은 편의점에서 야간 아르바이트를 하고 있습니다. 야간에 손님이 너무 없어 심심한 Finn은 손님들께 거스름돈을 n 원을 줄 때 방법의 경우의 수를 구하기로 하였습니다.

예를 들어서 손님께 5원을 거슬러 줘야 하고 1원, 2원, 5원이 있다면 다음과 같이 4가지 방법으로 5원을 거슬러 줄 수 있습니다.

1원을 5개 사용해서 거슬러 준다.
1원을 3개 사용하고, 2원을 1개 사용해서 거슬러 준다.
1원을 1개 사용하고, 2원을 2개 사용해서 거슬러 준다.
5원을 1개 사용해서 거슬러 준다.
거슬러 줘야 하는 금액 n과 Finn이 현재 보유하고 있는 돈의 종류 money가 매개변수로 주어질 때, Finn이 n 원을 거슬러 줄 방법의 수를 return 하도록 solution 함수를 완성해 주세요.

제한 사항

n은 100,000 이하의 자연수입니다.
화폐 단위는 100종류 이하입니다.
모든 화폐는 무한하게 있다고 가정합니다.
정답이 커질 수 있으니, 1,000,000,007로 나눈 나머지를 return 해주세요.

입출력 예

n	money	result
5	[1,2,5]	4

*/

function solution(n, money) {
  let change = [1];
  for (let i = 1; i <= n; i++) change[i] = 0;
  for (let i = 0; i < money.length; i++) {
    for (let j = 1; j <= n; j++)
      if (money[i] <= j) change[j] += change[j - money[i]] % 1000000007;
  }

  return change[n];
}

/*
일전에 부트캠프에서 한번 풀어본 문제.

거스름돈이 0원일때 부터 n원일때 까지 전부의 가짓수를 구하는 방법

0원이 되는 방법은 오직 한가지 뿐이기 때문에 change 배열에 0번째 인덱스에 1을 넣어주고
가진 동전의 수만큼 반복문을 돌리면서
거스름돈이 1원일때부터 n원일때까지의 반복문을 돌리고
동전이 거스름돈보다 작거나 같은 경우 거스름돈에 추가해주는 방법

예시를 들자면
n이 5이고 거스름 돈이[1,2,5] 원있을 경우 예제1 번

j가 1일 경우 money[i]가 1이기 때문에 작거나 같고 거스름돈 change[1] 은 0에서 change[1-1(money[i])]을 1000000007으로 나눈 나머지 값을 더해줘야한다.
change[1] = 0 + change[0]%1000000007 이 되고 change[0]은 1이기 때문에 change[1]은 1이 된다.

j가 2일 경우도 change[2]는 2가 된다.

1로 1을 만들수 있는 경우는 1 1가지
2를 만들 수 있는 경우는 1+1 1가지
.
.
.
5를 만들 수 있는 경우도 1+1+1+1+1 1가지로
change = [1,1,1,1,1,1]
i가 0일때 change의 값은 이렇게 나온다.

i가 1인 경우 동전의 가격은 2원이고
2원일때의 결과는
change = [1,1,2,2,3,3] 이란 결과가 나온다.

5원의 경우는 5원짜리 동전 하나만 거슬러주면 되기 때문에
change = [1,1,2,2,3,4] 라는 거스름돈을 나눠주는 방법이 나오게 되고

1+1+1+1+1
1+1+1+2
1+2+2
5

답은 4가 된다.
*/
