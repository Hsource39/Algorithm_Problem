/*
https://programmers.co.kr/learn/courses/30/lessons/12909

올바른 괄호
문제 설명

괄호가 바르게 짝지어졌다는 것은 '(' 문자로 열렸으면 반드시 짝지어서 ')' 문자로 닫혀야 한다는 뜻입니다. 예를 들어

"()()" 또는 "(())()" 는 올바른 괄호입니다.
")()(" 또는 "(()(" 는 올바르지 않은 괄호입니다.
'(' 또는 ')' 로만 이루어진 문자열 s가 주어졌을 때, 문자열 s가 올바른 괄호이면 true를 return 하고, 올바르지 않은 괄호이면 false를 return 하는 solution 함수를 완성해 주세요.

제한사항

문자열 s의 길이 : 100,000 이하의 자연수
문자열 s는 '(' 또는 ')' 로만 이루어져 있습니다.

입출력 예

s	answer
"()()"	true
"(())()"	true
")()("	false
"(()("	false

*/

function solution(s) {
  var answer = true;
  let open = 0;
  let close = 0;
  if (s[0] === ")") return false;
  else if (s[s.length - 1] === "(") return false;

  for (let i = 0; i < s.length; i++) {
    if (close > open) return false;
    s[i] === "(" ? open++ : close++;
  }
  if (open !== close) return false;

  return answer;
}

/*
먼저 예외 조건으로 s의 첫 문자가 ) 이거나 마지막 문자가(인 경우 false를 리턴해주고
반복문을 돌려서 )가 (보다 많아지면 false를 리턴해주고 문자가 (인 경우 open에 1을 더해주고 ) 인 경우 close 에 1을 더해준 뒤 마지막에 둘의 합이 같지 않다면 false 같다면 true를 리턴해줬다.

처음에

 if(s[0] === ")") return false;
 else if (s[s.length-1] === "(") return false;
이 예외문을 작성하지 않으니 효율성 테스트에서 실패를 했다.
예외 조건을 정하는 것도 알고리즘을 푸는데 중요한 조건 중 하나인 것 같다.
*/

/*
https://programmers.co.kr/learn/courses/30/lessons/17687

N진수 게임
튜브가 활동하는 코딩 동아리에서는 전통적으로 해오는 게임이 있다. 이 게임은 여러 사람이 둥글게 앉아서 숫자를 하나씩 차례대로 말하는 게임인데, 규칙은 다음과 같다.

숫자를 0부터 시작해서 차례대로 말한다. 첫 번째 사람은 0, 두 번째 사람은 1, … 열 번째 사람은 9를 말한다.
10 이상의 숫자부터는 한 자리씩 끊어서 말한다. 즉 열한 번째 사람은 10의 첫 자리인 1, 열두 번째 사람은 둘째 자리인 0을 말한다.
이렇게 게임을 진행할 경우,
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 0, 1, 1, 1, 2, 1, 3, 1, 4, …
순으로 숫자를 말하면 된다.

한편 코딩 동아리 일원들은 컴퓨터를 다루는 사람답게 이진수로 이 게임을 진행하기도 하는데, 이 경우에는
0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, …
순으로 숫자를 말하면 된다.

이진수로 진행하는 게임에 익숙해져 질려가던 사람들은 좀 더 난이도를 높이기 위해 이진법에서 십육진법까지 모든 진법으로 게임을 진행해보기로 했다. 숫자 게임이 익숙하지 않은 튜브는 게임에 져서 벌칙을 받는 굴욕을 피하기 위해, 자신이 말해야 하는 숫자를 스마트폰에 미리 출력해주는 프로그램을 만들려고 한다. 튜브의 프로그램을 구현하라.

입력 형식

진법 n, 미리 구할 숫자의 갯수 t, 게임에 참가하는 인원 m, 튜브의 순서 p 가 주어진다.

2 ≦ n ≦ 16
0 ＜ t ≦ 1000
2 ≦ m ≦ 100
1 ≦ p ≦ m

출력 형식

튜브가 말해야 하는 숫자 t개를 공백 없이 차례대로 나타낸 문자열. 단, 10~15는 각각 대문자 A~F로 출력한다.

입출력 예제

n	t	m	p	result
2	4	2	1	"0111"
16	16	2	1	"02468ACE11111111"
16	16	2	2	"13579BDF01234567"

*/

function solution(n, t, m, p) {
  let i = 0;
  let arr = [];
  while (arr.length < t * m) {
    arr.push(...i.toString(n).toUpperCase().split(""));
    i++;
  }
  return arr
    .filter((el, i) => i % m === p - 1)
    .slice(0, t)
    .join("");
}

/*
N진법의 숫자를 구하기 위해선 .toString(n) 을 사용해야했다. 또한 이럴경우 11진법 이상의 경우 10의 자리가 넘어갈 때 a,b,c... 순으로 숫자가 진행되기 때문에 소문자를 문제에서 원하는 대문자로 바꿔줬다.

while의 경우 미리 구할 숫자 개수와 사람 인원수를 곱한 것보다 배열의 크기가 커지면 멈추게 한 뒤
filter를 이용해서 미리 구할 숫자 개수 만큼을 순서에 맞춰서 분류하고 배열을 .join("")을 이용하여 답을 도출했다.
*/

/*
https://programmers.co.kr/learn/courses/30/lessons/12924

숫자의 표현
문제 설명
Finn은 요즘 수학공부에 빠져 있습니다. 수학 공부를 하던 Finn은 자연수 n을 연속한 자연수들로 표현 하는 방법이 여러개라는 사실을 알게 되었습니다. 예를들어 15는 다음과 같이 4가지로 표현 할 수 있습니다.

1 + 2 + 3 + 4 + 5 = 15
4 + 5 + 6 = 15
7 + 8 = 15
15 = 15
자연수 n이 매개변수로 주어질 때, 연속된 자연수들로 n을 표현하는 방법의 수를 return하는 solution를 완성해주세요.

제한사항

n은 10,000 이하의 자연수 입니다.

입출력 예

n	result
15	4

*/

function solution(n) {
  var answer = 0;
  for (let i = 1; i <= n; i++) {
    if (n % i === 0 && i % 2 === 1) answer++;
  }

  return answer;
}

/*
n을 표현할 수 있는 방법은 n의 약수 중 홀수의 개수로 표현이 가능했다. 문제의 15의 경우 1,3,5,15 4개의 홀수인 약수가 있고
1 => 15 하나로 15가 표현 가능함
3 => 3+3+3+3+3 3 5개로 표현 가능함 => 1+2+3+4+5 와 같다.
5 => 5+5+5 5 3개로 표현 가능함 => 4+5+6 와 같다.
15 => 홀수는 n+(n+1) 로 표현 가능 함 => 7+8 와 같다.

는 식이 성립했다.
*/
